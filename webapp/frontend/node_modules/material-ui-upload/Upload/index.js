'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _FlatButton = require('material-ui/FlatButton');

var _FlatButton2 = _interopRequireDefault(_FlatButton);

var _lodash = require('lodash');

var _index = require('./index.css');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // *-* mode: rjsx -*-


var Upload = function (_Component) {
    _inherits(Upload, _Component);

    function Upload() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Upload);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Upload.__proto__ || Object.getPrototypeOf(Upload)).call.apply(_ref, [this].concat(args))), _this), _this.exclusiveProps = ['fileTypeRegex', 'onFileLoad'], _this.onInputChange = function (e) {
            (0, _lodash.filter)(e.target.files, function (file) {
                return file.type.match(_this.props.fileTypeRegex) !== null;
            }).forEach(function (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    return _this.props.onFileLoad(e, file);
                };
                reader.readAsDataURL(file);
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Upload, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            (0, _reactDom.findDOMNode)(this.refs['file-input']).addEventListener('change', this.onInputChange, false);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            (0, _reactDom.findDOMNode)(this.refs['file-input']).removeEventListener('change', this.onInputChange, false);
        }
    }, {
        key: 'getControlProps',
        value: function getControlProps() {
            var _this2 = this;

            return Object.keys(this.props).filter(function (name) {
                return _this2.exclusiveProps.indexOf(name) === -1;
            }).reduce(function (acc, name) {
                acc[name] = _this2.props[name];
                return acc;
            }, {});
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: _index2.default.Container },
                _react2.default.cloneElement(_react2.default.createElement(
                    _FlatButton2.default,
                    {
                        containerElement: 'label',
                        className: _index2.default.Control
                    },
                    _react2.default.createElement('input', {
                        className: _index2.default.FileInput,
                        type: 'file',
                        ref: 'file-input',
                        multiple: true
                    })
                ), this.getControlProps())
            );
        }
    }]);

    return Upload;
}(_react.Component);

Upload.defaultProps = {
    fileTypeRegex: /.*/,
    onFileLoad: function onFileLoad(e) {
        return undefined;
    }
};
Upload.propTypes = {
    fileTypeRegex: _propTypes2.default.object,
    onFileLoad: _propTypes2.default.func
};
exports.default = Upload;
